section
  section
    h2 Optionnel/Note : En posix
    br
    div
      span(style='color:blue') \
      |  matche litt&eacute;ralement 
      span(style='color:blue') \
      | , il faut &eacute;chapper toutes les structures sp&eacute;ciales
    div
      | ex: groupes : \
      span(style='color:red') (
      | \
      span(style='color:red') )
  section
    h2 Optionnel/Note : En posix
    br
    div
      | Remplacements par 
      span(style='color:orange') \1
      |  &agrave; 
      span(style='color:orange') \9
    div
      span(style='color:orange') \0
      |  groupe de base
    div
      | Pour plus de d&eacute;tails : 
      a(href='https://www.regular-expressions.info/posix.html') https://www.regular-expressions.info/posix.html
  section
    div POSIX est utilis&eacute; par sed, grep et quelques commandes unix
  section
    div Mise en situation
    br
    div On a ces trois PDF dans un dossier,
    div avec &agrave; la fin le jour, mois puis ann&eacute;e
    div(data-markdown='')
      | &grave;&grave;&grave;
      | BUL0064137631032018.pdf
      | BUL0064137631072019.pdf
      | BUL0064137631032019.pdf
      | &grave;&grave;&grave;
  section
    div
      | Je veux garder l&apos;ann&eacute;e et le mois, en format am&eacute;ricain (yyyy-mm) pour que cela se trie tout seul par nom
    div(data-markdown='')
      | &grave;&grave;&grave;
      | ls | sed &apos;s/BUL..........\(..\)\(....\)..../&quot;\0&quot; &quot;\2-\1.pdf&quot;/&apos; | xargs -n 2 mv
      | &grave;&grave;&grave;
    div J&apos;aurais pu faire :
    div(data-markdown='')
      | &grave;&grave;&grave;
      | ls | sed &apos;s/BUL.\{10\}\(.\{2\}\)\(.\{4\}\)/&quot;\0&quot; &quot;\2-\1.pdf&quot;&apos; | xargs -n 2 mv
      | &grave;&grave;&grave;
    div Mes pdfs ont &eacute;t&eacute;s renomm&eacute;s 2018-02.pdf, 2019-05.pdf ... etc
